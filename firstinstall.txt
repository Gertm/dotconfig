#!/bin/bash

# not setting strict mode because we want the failed commands to keep running.
mkdir -p ~/bin

# if command -v apt help &> /dev/null
# then
#   echo "Seems like we're on Debian."
#   sudo apt update
#   sudo apt install tmux btop ncdu git fd-find ripgrep fzf bat prettyping
#   wget -O /tmp/helix-23.05-x86_64-linux.tar.xz https://github.com/helix-editor/helix/releases/download/23.05/helix-23.05-x86_64-linux.tar.xz
#   mkdir -p $HOME/src
#   tar xf /tmp/helix-23.05-x86_64-linux.tar.xz -C $HOME/src/
#   ln -s $HOME/src/helix-23.05-x86_64-linux/hx $HOME/bin/hx
#   echo 'export HELIX_RUNTIME=$HOME/src/helix-23.05-x86_64-linux/runtime' >> ~/.bashrc
# fi

if command -v dnf &> /dev/null
then
  echo "Seems like we're on Fedora."
  sudo dnf install tmux btop ncdu git fd-find ripgrep fzf bat prettyping
  sudo dnf install vim-enhanced
  sudo dnf -y copr enable varlad/helix
  sudo dnf -y install helix
  # for Factor:
  # sudo dnf install gtkglext-devel gtk2-devel gtk2-engines-devel 
fi

echo Installing golang.
sudo rm -rf /usr/local/go
curl -L https://go.dev/dl/$(curl -s https://api.github.com/repos/golang/go/git/matching-refs/tags/go | grep '/ref' | sed -e '/beta/ d' -e '/rc/ d' -e 's/.*\(go[0-9.]*\).*/\1/' | tail -1).linux-amd64.tar.gz | sudo tar -xzC /usr/local

echo installing it
echo 'export PATH=$PATH:/usr/local/go/bin:$HOME/bin:$HOME/go/bin' >> ~/.bashrc
echo 'export GOPATH=$HOME/go' >> ~/.bashrc
source ~/.bashrc

go install github.com/jesseduffield/lazygit@latest
go install github.com/nao1215/gup@latest
go install github.com/justjanne/powerline-go@latest
go install github.com/githubnemo/CompileDaemon@latest
go install github.com/giantswarm/semver-bump@latest
go install github.com/muesli/duf@latest
go install golang.org/x/tools/cmd/goimports@latest
go install golang.org/x/tools/cmd/callgraph@latest
go install golang.org/x/tools/cmd/digraph@latest
go install golang.org/x/tools/cmd/stringer@latest
go install mvdan.cc/gofumpt@latest
go install golang.org/x/tools/gopls@latest
go install github.com/go-delve/delve/cmd/dlv@latest
go install github.com/go-task/task/v3/cmd/task@latest
go install github.com/goreleaser/goreleaser@latest
go install github.com/dkorunic/betteralign/cmd/betteralign@latest

wget -O ffmpeg-release-amd64-static.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
tar xvf ffmpeg-release-amd64-static.tar.xz

#echo clean this up, has to be the correct folder instead of this specific one:

#mv ffmpeg-5.0.1-amd64-static/ff* ~/bin/
#rm -rf ffmpeg-5.0.1-amd64-static

wget https://github.com/arrowtype/recursive/releases/download/v1.084/ArrowType-Recursive-1.084.zip
unzip ArrowType-Recursive-1.084.zip
mkdir -p ~/.fonts
cp ArrowType-Recursive-1.084/Recursive_Code/RecMonoCasual/*.ttf ~/.fonts/
rm -rf ArrowType-Recursive-1.084

# haskell stuff:
# https://github.com/mrcjkb/haskell-tools.nvim
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh

git config --global alias.squash-all '!f(){ git reset $(git commit-tree HEAD^{tree} "$@");};f'
git config --global pull.rebase true
git config --global diff.colorMoved zebra
git config --global fetch.prune true

curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup component add rust-analyzer

wget -O /tmp/zig-linux-x86_64-0.11.0.tar.xz https://ziglang.org/download/0.11.0/zig-linux-x86_64-0.11.0.tar.xz
mkdir -p $HOME/src
tar xvf /tmp/zig-linux-x86_64-0.11.0.tar.xz -C $HOME/src/
ln -s $HOME/src/zig-linux-x86_64-0.11.0/zig $HOME/bin/zig
rm /tmp/zig-linux-x86_64-0.11.0.tar.xz 
cd $HOME/src/
git clone https://github.com/zigtools/zls
cd zls
zig build -Doptimize=ReleaseSafe -Ddata_version=0.11.0
ln -s $HOME/src/zls/zig-out/bin/zls  $HOME/bin/zls
cd $HOME
# load in .bashrc again so we can use it immediately.
source ~/.bashrc
